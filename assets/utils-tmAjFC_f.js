const e=new Map,t=(t,r=.7,a)=>new Promise(((n,s)=>{try{let c=e.get(t);if(!c){c=new Audio("/Kizuna-Mikuji/"+t),e.set(t,c)}c.currentTime=0,c.volume=r,c.play().catch((e=>{a&&a(e),s(e)})),n(c)}catch(c){a&&a(c),s(c)}})),r=async t=>{const r=Array.isArray(t)?t:[t],a=r.map((t=>new Promise((r=>{try{if(e.has(t))return void r();const a=new Audio("/Kizuna-Mikuji/"+t);a.addEventListener("canplaythrough",(()=>{e.set(t,a),r()}),{once:!0}),a.addEventListener("error",(()=>{r()}),{once:!0}),a.load()}catch(a){r()}}))));return await Promise.all(a),e},a=e=>{if(e&&!e.paused)try{e.pause(),e.currentTime=0}catch(t){}},n=(e,t=null)=>{try{const r=localStorage.getItem(e);return null===r?t:JSON.parse(r)}catch(r){return t}},s=(e,t)=>{try{return localStorage.setItem(e,JSON.stringify(t)),!0}catch(r){return!1}};export{r as a,s as b,n as g,t as p,a as s};
